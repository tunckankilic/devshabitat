// Mocks generated by Mockito 5.4.5 from annotations
// in devshabitat/test/unit/controllers/app_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:devshabitat/app/core/services/error_handler_service.dart'
    as _i4;
import 'package:get/get.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternalFinalCallback_0<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ErrorHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockErrorHandlerService extends _i1.Mock
    implements _i4.ErrorHandlerService {
  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_0<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i3.Future<void> handleError(
    dynamic error,
    String? errorType, {
    StackTrace? stackTrace,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [
            error,
            errorType,
          ],
          {
            #stackTrace: stackTrace,
            #metadata: metadata,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  String? validateInput(
    String? input, {
    bool? sanitize = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateInput,
          [input],
          {#sanitize: sanitize},
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  String? validateEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #validateEmail,
          [email],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  String? validatePassword(String? password) => (super.noSuchMethod(
        Invocation.method(
          #validatePassword,
          [password],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  String? validateFile(
    String? fileName,
    int? fileSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateFile,
          [
            fileName,
            fileSize,
          ],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  _i3.Future<T> handleApiError<T>(_i3.Future<T> Function()? apiCall) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleApiError,
          [apiCall],
        ),
        returnValue: _i5.ifNotNull(
              _i5.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #handleApiError,
                  [apiCall],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_1<T>(
              this,
              Invocation.method(
                #handleApiError,
                [apiCall],
              ),
            ),
        returnValueForMissingStub: _i5.ifNotNull(
              _i5.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #handleApiError,
                  [apiCall],
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_1<T>(
              this,
              Invocation.method(
                #handleApiError,
                [apiCall],
              ),
            ),
      ) as _i3.Future<T>);

  @override
  void handleSuccess(
    String? message, {
    _i2.SnackPosition? position = _i2.SnackPosition.BOTTOM,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleSuccess,
          [message],
          {#position: position},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleWarning(
    String? message, {
    _i2.SnackPosition? position = _i2.SnackPosition.BOTTOM,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleWarning,
          [message],
          {#position: position},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleInfo(
    String? message, {
    _i2.SnackPosition? position = _i2.SnackPosition.BOTTOM,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #handleInfo,
          [message],
          {#position: position},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showErrorDialog(
    String? title,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showErrorDialog,
          [
            title,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSuccessDialog(
    String? title,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showSuccessDialog,
          [
            title,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showConfirmationDialog({
    required String? title,
    required String? message,
    required _i6.VoidCallback? onConfirm,
    String? confirmText = 'Evet',
    String? cancelText = 'HayÄ±r',
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #message: message,
            #onConfirm: onConfirm,
            #confirmText: confirmText,
            #cancelText: cancelText,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logError(
    String? message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #logError,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logInfo(String? message) => super.noSuchMethod(
        Invocation.method(
          #logInfo,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logWarning(String? message) => super.noSuchMethod(
        Invocation.method(
          #logWarning,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
